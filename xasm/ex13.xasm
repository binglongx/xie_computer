    LDS RA, [0]
    LDS RB, [2]
    ADD RA, RB
    MOV RF, RA
    CLL [abs]
    MOV RC, 10
Loop:
    MOV RD, RA
    MOD RD, 10
    ADD RD, '0'
    STB RD, [RC]
    CMP RA, 10
    JPL [End]
    DIV RA, 10
    INC RC
    JMP [Loop]
End:
    // so far, starting at [10], until [RC], is the reversed string.
    // now we only need to copy
    CMP RF, 0
    JPL [Negative]
    JMP [Continue]
Negative:
    INC RC
    MOV RA, '-'
    STB RA, [RC]
Continue:
    MOV RB, 0x3000
Loop2:
    LDB RA, [RC]
    STB RA, [RB]
    CMP RC, 10
    JPE [Halt]
    INC RB
    DEC RC
    JMP [Loop2]
Halt:
    HLT

abs: //change RF to parameter before function call - return value: RB
    MOV RB, 0
    CMP RF, RB
    JPL [negative_abs]
    MOV RA, RF
    JMP [func_end_abs]
negative_abs:
    SUB RB, RF
    MOV RA, RB
func_end_abs:
    RET
